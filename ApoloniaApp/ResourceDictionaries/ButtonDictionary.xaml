<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">



    <!-- // SUBMIT BUTTON STYLE //  -->
    <SolidColorBrush x:Key="SubmitButton.Static.Background" Color="#FF48A1D9"/>
    <SolidColorBrush x:Key="SubmitButton.Static.Border" Color="#FF48A1D9"/>
    <SolidColorBrush x:Key="SubmitButton.MouseOver.Background" Color="#FF3C82BE"/>
    <SolidColorBrush x:Key="SubmitButton.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="SubmitButton.Pressed.Background" Color="#FF314F8D"/>
    <SolidColorBrush x:Key="SubmitButton.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="SubmitButton.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="SubmitButton.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="SubmitButton.Disabled.Foreground" Color="#FF838383"/>
    
    <Style x:Key="SubmitButton" TargetType="{x:Type Button}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="/Assets/Fonts/Roboto-Medium.ttf #Roboto Bold"/>
        <Setter Property="Background" Value="{StaticResource SubmitButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SubmitButton.Static.Border}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" 
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" 
                                    Value="{StaticResource SubmitButton.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" 
                                    Value="{StaticResource SubmitButton.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" 
                                    Value="{StaticResource SubmitButton.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" 
                                    Value="{StaticResource SubmitButton.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" 
                                    Value="{StaticResource SubmitButton.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" 
                                    Value="{StaticResource SubmitButton.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" 
                                    Value="{StaticResource SubmitButton.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- // CANCEL BUTTON STYLE //  -->
    <SolidColorBrush x:Key="CancelButton.Static.Background" Color="White"/>
    <SolidColorBrush x:Key="CancelButton.Static.Border" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="CancelButton.MouseOver.Background" Color="White"/>
    <SolidColorBrush x:Key="CancelButton.MouseOver.Border" Color="#FFD9D9D9"/>
    <SolidColorBrush x:Key="CancelButton.Pressed.Background" Color="White"/>
    <SolidColorBrush x:Key="CancelButton.Pressed.Border" Color="Gray"/>
    <SolidColorBrush x:Key="CancelButton.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="CancelButton.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="CancelButton.Disabled.Foreground" Color="#FF838383"/>

    <Style x:Key="CancelButton" TargetType="{x:Type Button}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="/Assets/Fonts/Roboto-Medium.ttf #Roboto Bold"/>
        <Setter Property="Background" Value="{StaticResource CancelButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CancelButton.Static.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource CancelButton.Static.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" 
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" 
                                    Value="{StaticResource CancelButton.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" 
                                    Value="{StaticResource CancelButton.MouseOver.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" 
                                    Value="{StaticResource CancelButton.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" 
                                    Value="{StaticResource CancelButton.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" 
                                    Value="{StaticResource CancelButton.Pressed.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter"
                                    Value="{StaticResource CancelButton.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" 
                                    Value="{StaticResource CancelButton.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" 
                                    Value="{StaticResource CancelButton.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" 
                                    Value="{StaticResource CancelButton.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FOCUS VISUAL SYLE TEMPLATE -->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- // TOOLBAR BUTTON// -->
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="ToolBarButton" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="/Assets/Fonts/Roboto-Light.ttf #Roboto Bold"/>
        <!--<Setter Property="Foreground" Value="#FFE8B200"/>-->

        <Setter Property="FontSize" Value="13"/>
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
        <Setter Property="Background" Value="#FF48A1D9"/>
        <Setter Property="BorderBrush" Value="#FF48A1D9"/>
        <Setter Property="Foreground" Value="White"/>

        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="white"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF48A1D9"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF48A1D9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFE8B200"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFE8B200"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- // TOOLBAR BUTTON// -->
    <Style x:Key="ToolBarBtn" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="/Assets/Fonts/Roboto-Light.ttf #Roboto Bold"/>
        <Setter Property="FontSize" Value="13"/>
        
        <Setter Property="Background"  Value="White"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Foreground" Value="#FF48A1D9"/>

        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="white"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF48A1D9"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF48A1D9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFE8B200"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFE8B200"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    
<!-- // TOOLBAR BUTTON// -->
    <Style x:Key="ToolBtn" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="/Assets/Fonts/Roboto-Light.ttf #Roboto Bold"/>
        <Setter Property="FontSize" Value="13"/>
        
        <Setter Property="Background"  Value="White"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Foreground" Value="#FF48A1D9"/>

        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{TemplateBinding Tag}"
                                   Width="20" Height="20"
                                   Margin="5" VerticalAlignment="Center"/>
                        
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="white"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF48A1D9"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF48A1D9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFE8B200"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFE8B200"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>