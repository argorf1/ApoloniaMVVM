<Window x:Class="ApoloniaApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodels="clr-namespace:ApoloniaApp.ViewModels" 
        xmlns:views="clr-namespace:ApoloniaApp.Views"
        mc:Ignorable="d"
        Title="MainWindow"
        WindowState="Maximized">

    <Window.Resources>
        <DataTemplate x:Name="AdminUserViewTemplate" DataType="{x:Type viewmodels:AdminUserViewModel}">
            <views:AdminUserView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="AdminUserCRUDViewTemplate" DataType="{x:Type viewmodels:AdminUserCRUDViewModel}">
            <views:AdminUserCRUDView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="AdminUnitViewTemplate" DataType="{x:Type viewmodels:AdminUnitViewModel}">
            <views:AdminUnitView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="AdminUnitCRUDViewTemplate" DataType="{x:Type viewmodels:AdminUnitCRUDViewModel}">
            <views:AdminUnitCRUDView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="AdminClientViewTemplate" DataType="{x:Type viewmodels:AdminClientViewModel}">
            <views:AdminClientView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="AdminClientCreateViewTemplate" DataType="{x:Type viewmodels:AdminClientCRUDViewModel}">
            <views:AdminClientCRUDView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="AdminSubunitViewTemplate" DataType="{x:Type viewmodels:AdminSubunitCrudViewModel}">
            <views:AdminSubunitCRUD DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="AdminRolViewTemplate" DataType="{x:Type viewmodels:AdminRolViewModel}">
            <views:AdminRolView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="AdminRolCRUDViewTemplate" DataType="{x:Type viewmodels:AdminRolCRUDViewModel}">
            <views:AdminRolCRUDView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="DPViewTemplate" DataType="{x:Type viewmodels:ProcessDesignerViewModel}">
            <views:ProcessDesignerView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="DPProcesoViewTemplate" DataType="{x:Type viewmodels:DPProcesosViewModel}">
            <views:DPProcesosView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="DPProcesoCRUDViewTemplate" DataType="{x:Type viewmodels:DPProcesosCRUDViewModel}">
            <views:DPProcesosCRUDView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="DPTareaCRUDViewTemplate" DataType="{x:Type viewmodels:DPTareaCRUDViewModel}">
            <views:DPTareaCRUDView DataContext="{Binding}"/>
        </DataTemplate>
            
        <Style x:Key="FocusVisual">

            <Setter Property="Control.Template">

                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF3C82BE"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>


        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="4" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RectangleRoundedCorners" TargetType="{x:Type Rectangle}"/>
        <Style x:Key="TextBoxRoundedBorder" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border CornerRadius="4" Background="White" BorderThickness="1" BorderBrush="#FF7D8683"/>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="5,0,0,0" VerticalAlignment="Center"/>
                            <Label x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" Foreground="Gray" Margin="5,0,0,0" VerticalAlignment="Center" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DimGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBoxRoundedCorners" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border CornerRadius="4" Background="White" BorderThickness="1" BorderBrush="#FF7D8683"/>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="5,0,0,0" VerticalAlignment="Center"/>
                            <Label x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" Foreground="Gray" Margin="5,0,0,0" VerticalAlignment="Center" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DimGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="PasswordBoxRoundedCornersStyle1" TargetType="{x:Type PasswordBox}">
            <Setter Property="PasswordChar" Value="●"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <ContentControl Content="{Binding CurrentViewModel}">
        <ContentControl.Resources>
            <DataTemplate DataType="{x:Type viewmodels:LoginViewModel}">
                <views:LoginView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewmodels:AdminViewModel}">
                <views:AdminView/>
            </DataTemplate>
        </ContentControl.Resources>
    </ContentControl>
</Window>
